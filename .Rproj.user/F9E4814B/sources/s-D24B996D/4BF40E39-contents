#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#

library(shiny)
library(shinycssloaders)

# Define UI for application that draws a histogram
ui <- fluidPage(

    # Application title
    titlePanel("Old Faithful Geyser Data"),

    # Sidebar with a slider input for number of bins 
    sidebarLayout(
        sidebarPanel(
            sliderInput("bins",
                        "Number of bins:",
                        min = 1,
                        max = 50,
                        value = 30),
            numericInput('mean_input', 'Mean', 10, min = 0, max = Inf),
            numericInput('sd_input', 'Standard Deviation', 2, min = 0, max = Inf),
        ),
        
        # Show a plot of the generated distribution
        mainPanel(
           plotOutput("distPlot")
        )
    )
)

# Define server logic required to draw a histogram
server <- function(input, output) {

    output$distPlot <- renderPlot({

        ul_dist = data.frame(k = rnorm(n = 1000, mean = input$mean_input, 
                                       sd = input$sd_input)) %>%
          mutate(df = "sampling")
        
        
        sample_function = function(sampling, number_stim)
        {
          power_df = matrix(nrow = 100, ncol= 9)
          
          
          for (i in 1:100) {
            
            sample_df = sampling %>%
              sample_n(number_stim) %>%
              mutate(df = "sample") 
            
            data_tost = rbind(sampling, sample_df)
            
            t_e = TOSTER::dataTOSTtwo(
              data = data_tost,
              deps = "k",
              group = "df",
              low_eqbound_d = -0.4,
              high_eqbound_d = 0.4,
              desc = TRUE,
              plots = FALSE)
            
            tost = t_e$tost$asDF
            desc = t_e$desc$asDF
            
            power_df[i, 1] = min(tost$`p[1]`, tost$`p[2]`) # p value tost
            power_df[i, 2] = tost$`p[0]`# p value t-test
            power_df[i, 3] = desc$`m[1]`# mean 1 (actual)
            power_df[i, 4] = desc$`m[2]`# mean 2 (sample)
            power_df[i, 5] = desc$`sd[1]`# sd 1 (actual)
            power_df[i, 6] = desc$`sd[2]`# sd 2 (sample)
            power_df[i, 7] = desc$`n[1]`# n1 (actual)
            power_df[i, 8] = desc$`n[2]`# n2 (sample)
            power_df[i, 9] = i # n2 (sample)
            
            
          }
          return(power_df)
        }
        
        df = sample_function(ul_dist, 5) %>% 
          as.data.frame()
        
        
        # draw the histogram with the specified number of bins
        df %>% 
          ggplot(aes(x = V1, y = "label")) + geom_boxplot() %>% withSpinner()
    })
}

# Run the application 
shinyApp(ui = ui, server = server)
